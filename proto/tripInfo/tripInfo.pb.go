// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/tripInfo/tripInfo.proto

package tripInfo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Route struct {
	From                 string   `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=To,proto3" json:"To,omitempty"`
	SpanContext          string   `protobuf:"bytes,3,opt,name=SpanContext,proto3" json:"SpanContext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a1e3e78a09be548, []int{0}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Route) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Route) GetSpanContext() string {
	if m != nil {
		return m.SpanContext
	}
	return ""
}

type Response struct {
	Distance             int32    `protobuf:"varint,1,opt,name=Distance,proto3" json:"Distance,omitempty"`
	Duration             int32    `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
	SpanContext          string   `protobuf:"bytes,3,opt,name=SpanContext,proto3" json:"SpanContext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a1e3e78a09be548, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetDistance() int32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Response) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Response) GetSpanContext() string {
	if m != nil {
		return m.SpanContext
	}
	return ""
}

func init() {
	proto.RegisterType((*Route)(nil), "tripInfo.Route")
	proto.RegisterType((*Response)(nil), "tripInfo.Response")
}

func init() { proto.RegisterFile("proto/tripInfo/tripInfo.proto", fileDescriptor_5a1e3e78a09be548) }

var fileDescriptor_5a1e3e78a09be548 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x29, 0xca, 0x2c, 0xf0, 0xcc, 0x4b, 0x43, 0x30, 0xf4, 0xc0, 0xe2, 0x42, 0x1c,
	0x30, 0xbe, 0x92, 0x2f, 0x17, 0x6b, 0x50, 0x7e, 0x69, 0x49, 0xaa, 0x90, 0x10, 0x17, 0x8b, 0x5b,
	0x51, 0x7e, 0xae, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x2d, 0xc4, 0xc7, 0xc5, 0x14,
	0x92, 0x2f, 0xc1, 0x04, 0x16, 0x61, 0x0a, 0xc9, 0x17, 0x52, 0xe0, 0xe2, 0x0e, 0x2e, 0x48, 0xcc,
	0x73, 0xce, 0xcf, 0x2b, 0x49, 0xad, 0x28, 0x91, 0x60, 0x06, 0x4b, 0x20, 0x0b, 0x29, 0xa5, 0x70,
	0x71, 0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x49, 0x71, 0x71, 0xb8, 0x64, 0x16,
	0x97, 0x24, 0xe6, 0x25, 0xa7, 0x82, 0x4d, 0x65, 0x0d, 0x82, 0xf3, 0xc1, 0x72, 0xa5, 0x45, 0x89,
	0x25, 0x99, 0xf9, 0x79, 0x60, 0xf3, 0x41, 0x72, 0x50, 0x3e, 0x61, 0x5b, 0x8c, 0x9c, 0xb8, 0xb8,
	0xdc, 0x53, 0xf3, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x4c, 0xb8, 0xb8, 0xdd, 0x53,
	0x4b, 0x42, 0xa0, 0x3e, 0x12, 0xe2, 0xd7, 0x83, 0x7b, 0x16, 0xec, 0x33, 0x29, 0x21, 0x24, 0x01,
	0xa8, 0xdb, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0x21, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x97,
	0xc6, 0x15, 0x26, 0x2a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeoServiceClient is the client API for GeoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeoServiceClient interface {
	GetTripInfo(ctx context.Context, in *Route, opts ...grpc.CallOption) (*Response, error)
}

type geoServiceClient struct {
	cc *grpc.ClientConn
}

func NewGeoServiceClient(cc *grpc.ClientConn) GeoServiceClient {
	return &geoServiceClient{cc}
}

func (c *geoServiceClient) GetTripInfo(ctx context.Context, in *Route, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/tripInfo.GeoService/GetTripInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeoServiceServer is the server API for GeoService service.
type GeoServiceServer interface {
	GetTripInfo(context.Context, *Route) (*Response, error)
}

// UnimplementedGeoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGeoServiceServer struct {
}

func (*UnimplementedGeoServiceServer) GetTripInfo(ctx context.Context, req *Route) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTripInfo not implemented")
}

func RegisterGeoServiceServer(s *grpc.Server, srv GeoServiceServer) {
	s.RegisterService(&_GeoService_serviceDesc, srv)
}

func _GeoService_GetTripInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Route)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeoServiceServer).GetTripInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tripInfo.GeoService/GetTripInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeoServiceServer).GetTripInfo(ctx, req.(*Route))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tripInfo.GeoService",
	HandlerType: (*GeoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTripInfo",
			Handler:    _GeoService_GetTripInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/tripInfo/tripInfo.proto",
}
